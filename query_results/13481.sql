SELECT tc.* FROM title_basics AS tb INNER JOIN ( SELECT * FROM ( SELECT DISTINCT tb.titleType AS TitleType, tb.primaryTitle AS PrimaryTitle, tb.originalTitle AS OriginalTitle, tb.isAdult AS IsAdult, tb.startYear AS StartYear, tb.endYear AS EndYear, tb.runtimeMinutes AS RuntimeMinutes, g.genreId AS GenreID, g.nameGenre AS NameGenre, GROUP_CONCAT(DISTINCT rv.averageRating SEPARATOR ', ') AS AverageRatings, COUNT(*) AS NumVotes FROM title_ratings AS tr LEFT OUTER JOIN ratingValue AS rv ON tr.ratingId = rv.id AND tr.titleId = tb.titleId WHERE rv.userRate = 1 OR rv.systemRate = 1 AND tb.titleType IN ('movie') AND rv.type LIKE '%score%' AND NOT EXISTS (SELECT * FROM title_principals as tp where tp.job in ('director','writer')) GROUP BY tb.titleType, tb.primaryTitle, tb.originalTitle, tb.isAdult, tb.startYear, tb.endYear, tb.runtimeMinutes, g.genreId, g.nameGenre ) AS subquery GROUP BY tc.titleType, tc.primaryTitle, tc.originalTitle, tc.isAdult, tc.startYear, tc.endYear, tc.runtimeMinutes, g.genreId, g.nameGenre HAVING MIN(AverageRatings) > 5 ORDER BY Avg(NumVotes), Avg(AverageRatings)) AS inner_subquery ON tc.titleId=inner_subquery.titleId